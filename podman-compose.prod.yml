# Production configuration for Windows NAS - SIMPLE VERSION
services:
  postgres:
    image: postgres:15-alpine
    container_name: family-board-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: familyboard
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-fdsfjh88432kjhsd9810-035-094386sdjfh8304230489u}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Containerfile
      target: production
    container_name: family-board-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: postgresql://postgres:${DB_PASSWORD:-fdsfjh88432kjhsd9810-035-094386sdjfh8304230489u}@postgres:5432/familyboard
      JWT_SECRET: ${JWT_SECRET:-kdjshbfgdf984375i4kj35h23i85y34ktjhedmfj19098y34i5rwf843}
      NODE_ENV: production
      PORT: 3001
      FRONTEND_URL: https://mabt.eu
      ALLOWED_ORIGINS: https://mabt.eu,http://192.168.1.24:8081,exp://192.168.1.24:8081
      DISABLE_CSRF_VALIDATION: true
      BCRYPT_ROUNDS: 12
      API_RATE_LIMIT_WINDOW: 15
      API_RATE_LIMIT_MAX: 100
      DEFAULT_LANGUAGE: en
      SUPPORTED_LANGUAGES: en,fr
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Containerfile.prod
      args:
        VITE_API_URL: https://mabt.eu
        VITE_SOCKET_URL: https://mabt.eu
        VITE_ENVIRONMENT: production
        VITE_APP_NAME: "Family Board"
        VITE_APP_VERSION: "1.0.0"
        VITE_ENABLE_ANALYTICS: "false"
        VITE_ENABLE_PUSH_NOTIFICATIONS: "false"
        VITE_DEFAULT_LANGUAGE: en
        VITE_SUPPORTED_LANGUAGES: en,fr
    container_name: family-board-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: family-board-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
