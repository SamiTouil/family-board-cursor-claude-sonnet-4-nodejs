# Production deployment using GitHub Container Registry images
# This file is designed for your Windows production machine
# No source code needed - just pulls pre-built images!

services:
  postgres:
    image: postgres:15-alpine
    container_name: family-board-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-familyboard}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - family-board-network

  backend:
    image: ghcr.io/samitouil/family-board-cursor-claude-sonnet-4-nodejs/backend:latest
    container_name: family-board-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      # Database connection
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-familyboard}
      
      # Security
      JWT_SECRET: ${JWT_SECRET}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-12}
      
      # Application settings
      NODE_ENV: production
      PORT: 3001
      
      # CORS and frontend settings
      FRONTEND_URL: ${FRONTEND_URL}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      
      # Feature flags
      DISABLE_CSRF_VALIDATION: ${DISABLE_CSRF_VALIDATION:-false}
      
      # Rate limiting
      API_RATE_LIMIT_WINDOW: ${API_RATE_LIMIT_WINDOW:-15}
      API_RATE_LIMIT_MAX: ${API_RATE_LIMIT_MAX:-100}
      
      # Internationalization
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-en}
      SUPPORTED_LANGUAGES: ${SUPPORTED_LANGUAGES:-en,fr}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - family-board-network

  frontend:
    image: ghcr.io/samitouil/family-board-cursor-claude-sonnet-4-nodejs/frontend:latest
    container_name: family-board-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - family-board-network

  # Optional: Nginx reverse proxy for SSL termination
  nginx:
    image: nginx:alpine
    container_name: family-board-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.production.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # Mount your SSL certificates here
    depends_on:
      - backend
      - frontend
    networks:
      - family-board-network
    # Remove this service if you don't need SSL/reverse proxy

  # Optional: Database administration tool
  adminer:
    image: adminer:latest
    container_name: family-board-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - family-board-network
    # Remove this service if you don't need database admin UI

volumes:
  postgres_data:
    driver: local

networks:
  family-board-network:
    driver: bridge
