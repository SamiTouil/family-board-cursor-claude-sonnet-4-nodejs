name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: family_board_test
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install backend dependencies
      run: cd backend && npm ci

    - name: Install frontend dependencies
      run: cd frontend && npm ci

    - name: Install E2E dependencies
      run: cd e2e-tests && npm ci

    - name: Install Playwright browsers
      run: cd e2e-tests && npx playwright install chromium

    - name: Generate Prisma client
      run: cd backend && npx prisma generate

    - name: Wait for PostgreSQL to be ready
      run: |
        timeout 60 bash -c 'until pg_isready -h localhost -p 5432 -U postgres; do sleep 2; done'

    - name: Setup database schema
      run: cd backend && npx prisma db push
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/family_board_test

    - name: Lint backend
      run: cd backend && npm run lint

    - name: Lint frontend
      run: cd frontend && npm run lint

    - name: Test backend
      run: cd backend && npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/family_board_test

    - name: Test frontend
      run: cd frontend && npm test

    - name: Build backend
      run: cd backend && npm run build

    - name: Build frontend
      run: cd frontend && npm run build

    - name: Start backend for E2E tests
      run: |
        cd backend
        npm run dev &
        BACKEND_PID=$!
        echo "BACKEND_PID=$BACKEND_PID" >> $GITHUB_ENV
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/family_board_test

    - name: Wait for backend to start
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:3001/health; do sleep 2; done'

    - name: Start frontend for E2E tests
      run: |
        cd frontend
        npm run dev &
        FRONTEND_PID=$!
        echo "FRONTEND_PID=$FRONTEND_PID" >> $GITHUB_ENV

    - name: Wait for frontend to start
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'

    - name: Run E2E tests
      run: cd e2e-tests && npm test

    - name: Stop services
      if: always()
      run: |
        if [ ! -z "$BACKEND_PID" ]; then kill $BACKEND_PID || true; fi
        if [ ! -z "$FRONTEND_PID" ]; then kill $FRONTEND_PID || true; fi

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: e2e-tests/playwright-report/
        retention-days: 30 