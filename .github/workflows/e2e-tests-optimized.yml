name: E2E Tests Optimized

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10 # Strict timeout
    
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3, 4] # Run 4 shards in parallel
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    
    # Cache Docker layers
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    # Start services in parallel
    - name: Start services
      run: |
        docker-compose up -d db backend frontend
        # Wait for services to be ready
        docker-compose run --rm wait-for-it db:5432 -- echo "Database is ready"
        docker-compose run --rm wait-for-it backend:5001 -- echo "Backend is ready"
        docker-compose run --rm wait-for-it frontend:3000 -- echo "Frontend is ready"
    
    # Install Playwright with caching
    - name: Cache Playwright browsers
      uses: actions/cache@v3
      with:
        path: ~/.cache/ms-playwright
        key: playwright-${{ runner.os }}-${{ hashFiles('e2e-tests/package-lock.json') }}
    
    - name: Install E2E test dependencies
      run: |
        cd e2e-tests
        npm ci
        npx playwright install chromium --with-deps
    
    # Run tests with sharding
    - name: Run E2E tests (shard ${{ matrix.shard }}/4)
      run: |
        cd e2e-tests
        npx playwright test --shard=${{ matrix.shard }}/4 --reporter=github
      env:
        CI: true
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-results-shard-${{ matrix.shard }}
        path: e2e-tests/playwright-report/
        retention-days: 7
    
    - name: Stop services
      if: always()
      run: docker-compose down