@echo off
REM Family Board - Production Setup Script for Windows
REM This script sets up the production environment for the first time

setlocal enabledelayedexpansion

echo.
echo ==========================================
echo   Family Board Production Setup
echo ==========================================
echo.

REM Check if Podman is running
echo [INFO] Checking Podman status...
podman info >nul 2>&1
if errorlevel 1 (
    echo [ERROR] Podman is not running. Please start Podman and try again.
    echo [INFO] Download Podman from: https://podman.io/getting-started/installation
    pause
    exit /b 1
)
echo [SUCCESS] Podman is running
echo.

REM Check if environment file exists
if exist ".env.production" (
    echo [INFO] Environment file already exists
    set /p overwrite="Do you want to reconfigure it? (y/N): "
    if /i not "!overwrite!"=="y" goto skip_env_setup
)

echo [INFO] Setting up environment configuration...
echo.

REM Get user input for configuration
set /p domain="Enter your domain or IP address (e.g., 192.168.1.100): "
if "!domain!"=="" set domain=192.168.1.100

set /p db_password="Enter a secure database password: "
if "!db_password!"=="" set db_password=change-this-password

echo [INFO] Generating JWT secret...
REM Generate a random JWT secret (simplified for Windows)
set jwt_secret=
for /l %%i in (1,1,32) do (
    set /a rand=!random! %% 62
    if !rand! lss 10 (
        set /a char=!rand!+48
    ) else if !rand! lss 36 (
        set /a char=!rand!+55
    ) else (
        set /a char=!rand!+61
    )
    for /f %%j in ('cmd /c "echo !char!"') do (
        for /f "skip=1" %%k in ('cmd /c "echo %%j | more"') do set "jwt_secret=!jwt_secret!%%k"
    )
)
if "!jwt_secret!"=="" set jwt_secret=your-super-secure-jwt-secret-at-least-32-characters-long

REM Create environment file
echo [INFO] Creating .env.production file...
(
echo # Family Board - Production Environment Configuration
echo # Generated by setup script on %date% %time%
echo.
echo # Database Configuration
echo POSTGRES_DB=familyboard
echo POSTGRES_USER=postgres
echo POSTGRES_PASSWORD=!db_password!
echo.
echo # Security Configuration
echo JWT_SECRET=!jwt_secret!
echo BCRYPT_ROUNDS=12
echo.
echo # Application Configuration
echo FRONTEND_URL=http://!domain!:3000
echo ALLOWED_ORIGINS=http://!domain!:3000,exp://!domain!:8081
echo.
echo # Feature Flags
echo DISABLE_CSRF_VALIDATION=true
echo.
echo # Rate Limiting
echo API_RATE_LIMIT_WINDOW=15
echo API_RATE_LIMIT_MAX=100
echo.
echo # Internationalization
echo DEFAULT_LANGUAGE=en
echo SUPPORTED_LANGUAGES=en,fr
echo.
echo # Monitoring
echo ENABLE_HEALTH_CHECKS=true
) > .env.production

echo [SUCCESS] Environment file created
echo.

:skip_env_setup

REM Create backup directory
if not exist "backups" (
    echo [INFO] Creating backup directory...
    mkdir backups
    echo [SUCCESS] Backup directory created
    echo.
)

REM Create SSL directory (optional)
if not exist "ssl" (
    echo [INFO] Creating SSL directory (for future SSL certificates)...
    mkdir ssl
    echo [SUCCESS] SSL directory created
    echo.
)

echo [SUCCESS] Production environment setup completed!
echo.
echo [INFO] Next steps:
echo   1. Review and edit .env.production if needed
echo   2. Run: scripts\deploy-production.bat
echo   3. Access your application at: http://!domain!:3000
echo.
echo [INFO] Optional: Set up SSL certificates in the ssl\ directory
echo [INFO] Optional: Configure your router to forward ports 80 and 443
echo.

pause
