version: '3.8'

services:
  # Database migration service (runs once then exits)
  db-migrate:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: |
      sh -c "
        echo 'Running database migrations...'
        npx prisma migrate deploy
        npx prisma generate
        echo 'Database migrations completed!'
      "
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
    restart: "no"
    depends_on:
      - db-check

  # Database connection check
  db-check:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: |
      sh -c "
        echo 'Checking database connection...'
        until npx prisma db pull --force; do
          echo 'Database not ready - waiting...'
          sleep 5
        done
        echo 'Database connection successful!'
      "
    environment:
      - DATABASE_URL=${DATABASE_URL}
    restart: "no"

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=3001
    restart: unless-stopped
    depends_on:
      - db-migrate
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - VITE_API_URL=${VITE_API_URL:-http://localhost:3001}
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/ssl/certs:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  default:
    name: family-board-network 